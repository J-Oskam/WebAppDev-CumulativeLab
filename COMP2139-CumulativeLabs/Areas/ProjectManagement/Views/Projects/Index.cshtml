@model List<Project>

@{
    ViewData["Title"] = "Projects"; //Overrides the Title tag that has default implementation in the _layout.cshtml file
    //Lab 5 - search parameters
    bool searchPerformed = ViewData["SearchPerformed"] as bool? ?? false;
    string searchString = ViewData["SearchString"] as string;
}

<h2>Projects</h2>

@if (Model.Any()) { //If the model has any data then display the projects
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Summary</th>
                <th>Actions</th>

            </tr>
        </thead>
        <tbody>
            @foreach(var project in Model){
                <tr>
                    <td>@project.ProjectId</td>
                    <td>@project.Name</td>
                    <td>@project.Description</td>
                    <td>@await Component.InvokeAsync("ProjectSummary", new { projectId = project.ProjectId })</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@project.ProjectId" class="btn btn-info">Details</a>
                        <a asp-action="Edit" asp-route-id="@project.ProjectId" class="btn btn-secondary">Edit</a>
                        <a asp-action="Delete" asp-route-id="@project.ProjectId" class="btn btn-danger">Delete</a>
                        <a asp-controller="Task" asp-action="Index" asp-route-projectId="@project.ProjectId" class="btn btn-warning">View Tasks</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
} else {
    if (searchPerformed) {
        <p>No projects with the keyword: "@searchString" found.</p>
    } else {
        <p>No projects found</p>
    }
}

<a class="btn btn-primary" asp-action="Create">Create Project</a>